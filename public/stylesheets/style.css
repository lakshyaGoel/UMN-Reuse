.lgWrap {
  padding-top: 2rem;
  display: block !important; }

.lgColumn {
  display: inline-block;
  width: 24% !important; }

.lgSpan {
  border-color: #00d1b2;
  background: #00d1b2;
  border-radius: 0.3rem;
  border-width: thick;
  border-style: solid;
  color: white;
  font-weight: bolder;
  font-size: larger; }

.lgNavBar {
  font-weight: bolder;
  font-size: larger; }

.lgNavBarHref {
  padding: 0;
  height: fit-content;
  margin-top: 0.8rem; }

/*
# How to use scss

- If you are a window user,
Read this article's 1 and 2.
it is not necessary after the end of section2 of the article(Install Sass Using the Command Prompt)
Well done!

Next, run
 `npm install -g grunt-cli`
 and
 `npm install`

Finally, when you start writing scss,
run

`grunt`

command in module-2-group-assignment-val-n-1, folder.

it's automatically detect the change what you do and generate css.

# How to write scss

scss is really simple, if you don't want to learn, just put pure css code.
It's scss!
Or if you know more,
try following scss(css) code!
```
body{
  h1{
  background-color: #0f0;
   }
}
```
Then, compile this scss, you could get following css

```
body h1{
  background-color: #0f0;
}
```
Does it make sense?
Yes, the scss could use nest structure!

Or, if you don't want to try,
Anyway, you should write any of your css code in your name's scss file.

when someone compile scss,
the css is completely overwrite,
so if you write any css in style.css,
completely delete what you do!
*/
/*
# How to use scss

- If you are a mac user,
First, run the terminal and update ruby with brew or port command.
The command is
`brew install ruby`

Next, update gem(ruby's npm)
`gem update --system`

Next, install scss compiler by gem(ruby's npm)
`gem install sass`

Next, run
 `npm install -g grunt-cli`
 and
 `npm install`

Finally, when you start writing scss,
run

`grunt`

command,
it's automatically detect the change what you do and generate css.

# How to write scss

scss is really simple, if you don't want to learn, just put pure css code.
It's scss!
Or if you know more,
try following scss(css) code!
```
body{
  h1{
  background-color: #0f0;
   }
}
```
Then, compile this scss, you could get following css

```
body h1{
  background-color: #0f0;
}
```
Does it make sense?
Yes, the scss could use nest structure!

Or, if you don't want to try,
Anyway, you should write any of your css code in your name's scss file.

when someone compile scss,
the css is completely overwrite,
so if you write any css in style.css,
completely delete what you do!
*/
/*Modal Box Style*/
.modalDialog {
  position: fixed;
  font-family: Arial, Helvetica, sans-serif;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background: rgba(0, 0, 0, 0.8);
  z-index: 99999;
  opacity: 0;
  -webkit-transition: opacity 400ms ease-in;
  -moz-transition: opacity 400ms ease-in;
  transition: opacity 400ms ease-in;
  pointer-events: none; }

.modalDialog:target {
  opacity: 1;
  pointer-events: auto; }

.modalDialog > div {
  width: 400px;
  position: relative;
  margin: 10% auto;
  padding: 5px 20px 13px 20px;
  border-radius: 10px;
  background: #fff;
  background: -moz-linear-gradient(#fff, #999);
  background: -webkit-linear-gradient(#fff, #999);
  background: -o-linear-gradient(#fff, #999); }

body {
  background-color: #fefefe; }

.fullwidth {
  display: block;
  height: 400px; }

/*# sourceMappingURL=style.css.map */
